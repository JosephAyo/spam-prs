import requests
import random
import itertools
import datetime
import json

headers = {"Accept": "application/json"}

tokens_file = "./env/hackerone-tokens.txt"

with open(tokens_file, "r") as file:
    tokens = file.read().splitlines()

# Choose a random start index
start_index = random.randint(0, len(tokens) - 1)

rotated_tokens = tokens[start_index:] + tokens[:start_index]
token_iterator = itertools.cycle(rotated_tokens)

current_token = next(token_iterator)


def log_activity(activity: str):
    log = f"{datetime.datetime.now()}: {activity}\n"
    # print(log)
    with open(f"./datasets/fetch-cve-output.log", "a") as log_file:
        log_file.write(log)


report_ids = [
    2199174,
    2298307,
    2819666,
    2823554,
    2871792,
    2887487,
    2905552,
    2912277,
    2981245,
    3100073,
    3101127,
    3116935,
    3117697,
    3125820,
    3125832,
    3137657,
    3158093,
    3230082,
    3231321,
    3242005,
    3249936,
    3250490,
]



cve_reports = []

for report_id in report_ids:
    try:
        r = requests.get(
            f"https://api.hackerone.com/v1/hackers/reports/{report_id}?include=comments",
            auth=("painted_", current_token),
            headers=headers,
        )
        r.raise_for_status()  # raises HTTPError for bad responses

        cve_reports.append(r.json())
        log_activity(f"Successfully processed report {report_id}")

    except Exception as e:
        log_activity(f"Error processing report id {report_id}: {e}")

# Save all responses into one file
with open("cve_reports.json", "w", encoding="utf-8") as f:
    json.dump(cve_reports, f, indent=2)